// =========================================DSU ======================================================================
// class DSU{
// public:
    // vector<int> rank,parent,size;
    // DSU(int n){
        // rank.resize(n+1);
        // parent.resize(n+1);
        // size.resize(n+1,1);
        // for (int i=0;i<n;i++){
            // parent[i] = i;
        // }
    // }
    // int find(int v){
        // if(v==parent[v]) return v; 
        // return parent[v] = find(parent[v]);
    // }
    // void union_rank(int a, int b) {
    // a = find(a);b = find(b);
        // if(a!=b){
        // if (rank[a] < rank[b])swap(a, b);
        // parent[b] = a;
        // if (rank[a] == rank[b])rank[a]++;
        // }
    // }
    // void union_size(int a, int b) {
    // a = find(a);b = find(b);
    // if (a!=b){
        // if (size[a] < size[b])swap(a, b);
        // parent[b] = a;
        // size[a] += size[b];
    // }
// }
// };
